def network='jenkins-${BUILD_NUMBER}'
def seleniumHub='selenium-hub-${BUILD_NUMBER}'
def chrome='chrome-${BUILD_NUMBER}'
def firefox='firefox-${BUILD_NUMBER}'
def containertest='conatinertest-${BUILD_NUMBER}'

pipeline {
   agent any
   stages{
         stage('SCM Checkout'){
             git credentialsId: 'git-creds', url: 'https://github.com/LiquidVibe/testMvn'
         }
         stage('Mvn Package'){
           def mvnHome = tool name: 'maven-3', type: 'maven'
           def mvnCMD = "${mvnHome}/bin/mvn"
           sh "${mvnCMD} clean package"
         }
         stage('Build Docker Image'){
           sh 'docker build -t LiquidVibe/testMvn .'
         }
         stage ('Push Docker Image'){
                     steps{
                         withCredentials([string(credentialsId: 'docker-pwd', variable: 'dockerHubPwd')]) {
                              sh 'docker login -u bbentein -p ${dockerHubPwd}'
                          }
                          sh 'docker push bbentein/dockerMvnImage:latest'
                      }
                  }
         stage('Run docker'){
           def dockerRun = 'docker run -p 8080:8080 -d --name my-app bbentein/dockerMvnImage'
         }

          stage('Setting Up Selenium Grid') {
             steps{
                sh "docker network create ${network}"
                sh "docker run -d -p 4444:4444 --name ${seleniumHub} --network ${network} selenium/hub"
                sh "docker run -d -e HUB_PORT_4444_TCP_ADDR=${seleniumHub} -e HUB_PORT_4444_TCP_PORT=4444 --network ${network} --name ${chrome} selenium/node-chrome"
             }
          }
          stage('Run Test') {
             steps{
                  steps {
                    sh 'mvn clean install'
                  }
             }
          }

          stage('Tearing Down Selenium Grid') {
              steps {
                 sh "docker rm -vf ${chrome}"
                 sh "docker rm -vf ${seleniumHub}"
                 sh "docker network rm ${network}"
              }
           }
   }
}