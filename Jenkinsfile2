def network='jenkins-${BUILD_NUMBER}'
def seleniumHub='selenium-hub-${BUILD_NUMBER}'
def chrome='chrome-${BUILD_NUMBER}'
def firefox='firefox-${BUILD_NUMBER}'
def containertest='conatinertest-${BUILD_NUMBER}'

pipeline {
    agent none

   stages{
       stage('Docker node test') {
             agent {
               docker {
                 image 'node:7-alpine'
                 args '--name docker-node'
               }
             }
             steps {
               sh 'node --version'
             }
           }

           stage('Docker maven test') {
             agent {
               docker {
                 image 'maven:3-alpine'
               }
             }
             steps {
               sh 'mvn --version'
             }
           }

          stage('Setting Up Selenium Grid') {
             steps{
                sh "docker network create ${network}"
                sh "docker run -d -p 4444:4444 --name ${seleniumHub} --network ${network} selenium/hub"
                sh "docker run -d -e HUB_PORT_4444_TCP_ADDR=${seleniumHub} -e HUB_PORT_4444_TCP_PORT=4444 --network ${network} --name ${chrome} selenium/node-chrome"
             }
          }
          stage('Run Test') {
             steps{
                  steps {
                    sh 'mvn clean install'
                  }
             }
          }
         stage('Build Image') {
             steps {
                 script {
                       app = docker.build("bbentein/containertest")
                 }
             }
         }
         stage ('Push Docker Image'){
             steps{
                script {
                  docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                      app.push("${BUILD_NUMBER}")
                      app.push("latest")
                    }
                }
             }
         }

          stage('Tearing Down Selenium Grid') {
              steps {
                 sh "docker rm -vf ${chrome}"
                 sh "docker rm -vf ${seleniumHub}"
                 sh "docker network rm ${network}"
              }
           }
   }
}