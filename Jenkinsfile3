node("docker") {
    stage('SCM Checkout'){
        def mvnHome = tool name: 'TestMaven', type: 'maven'
        git 'https://github.com/LiquidVibe/testMvn'
    }

    docker.withRegistry('<<your-docker-registry>>', '<<your-docker-registry-credentials-id>>') {

        git url: "<<your-git-repo-url>>", credentialsId: '<<your-git-credentials-id>>'

        sh "git rev-parse HEAD > .git/commit-id"
        def commit_id = readFile('.git/commit-id').trim()
        println commit_id

        stage "build"
        def app = docker.build "your-project-name"

        stage "publish"
        app.push 'master'
        app.push "${commit_id}"
    }
}


          stage ('run docker') {
            steps{
                sh 'docker run -v /var/run/docker.sock:/var/run/docker.sock ubuntu:latest'
                sh 'apt-get update'
             }
          }

          sudo usermod -a -G root jenkins
          sudo service jenkins restart


          or

          sudo usermod -a -G docker jenkins

RUN apt-get update && apt-get install -y apt-transport-https


          RUN apt-get update \
                && apt-get install -y sudo \
                && rm -rf /var/lib/apt/lists/*
          RUN echo "jenkins ALL=NOPASSWD: ALL" >> /etc/sudoers


          sh "docker network create ${network}"
                          sh "docker run -d -p 4444:4444 --name ${seleniumHub} --network ${network} selenium/hub"
                          sh "docker run -d -e HUB_PORT_4444_TCP_ADDR=${seleniumHub} -e HUB_PORT_4444_TCP_PORT=4444 --network ${network} --name ${chrome} selenium/node-chrome"




              stage('Remove docker-compose files') {
                  steps{
                    sh 'docker-compose -f ./docker-compose rm -f -s'
                    sh 'docker-compose -f ./docker-compose.yml down --rmi local --remove-orphans'
                  }
              }


RUN docker pull selenium/hub
RUN docker pull selenium/node-chrome-debug
RUN docker run -d -p 4444:4444 --name selenium-hub -P selenium/hub
RUN docker run -d -P --name chrome --link selenium-hub:hub selenium/node-chrome-debug

    compile:
       dockerfile: .dockerfile
       project_name: dockerMvnRepo
    services:
      mysql:
        image: mysql:5.7
        environment:
        - MYSQL_ROOT_PASSWORD=password
        - MYSQL_DATABASE=admin
        networks:
        - compose-net
        expose:
        - 3306

      java-unit:
        image: java:11-jdk
        working_dir: /src


RUN curl -L "https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
RUN chmod +x /usr/local/bin/docker-compose
RUN docker-compose --version
RUN cd /dockerMvnRepo/
RUN docker-compose up



FROM ubuntu:latest

USER root
RUN apt-get update && apt-get install -y apt-transport-https

RUN apt-get install -y apt-transport-https ca-certificates curl software-properties-common
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
RUN apt-key fingerprint 0EBFCD88
RUN add-apt-repository \
       "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
       $(lsb_release -cs) \
       stable"
RUN apt-get update
RUN apt-get install -y docker-ce
RUN docker run -v /var/run/docker.sock:/var/run/docker.sock -ti docker
RUN bash service docker start
RUN docker pull selenium/hub:latest
RUN docker pull selenium/node-chrome-debug:latest
RUN docker run -d -p 4444:4444 --name selenium-hub -P selenium/hub
RUN docker run -d -p 4578 --name chrome --link selenium-hub:hub selenium/node-chrome-debug

USER jenkins


RUN docker run -v /var/run/docker.sock:/var/run/docker.sock docker



RUN apt-get update
RUN apt-get -y install apt-transport-https \
     ca-certificates \
     curl \
     gnupg2 \
     software-properties-common
RUN curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg > /tmp/dkey; apt-key add /tmp/dkey
RUN add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") \
   $(lsb_release -cs) \
   stable"
RUN apt-get update
RUN apt-get -y install docker-ce


   agent {
        dockerfile {
            filename 'Dockerfile'
            args '--entrypoint=\'\''
        }
   }


     db:
       image: mariadb
       ports:
         - 3306:3306
       environment:
         MYSQL_ROOT_PASSWORD: example

  db:
    image: mysql:5.7
    ports:
      - 3306:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'


                sh 'sudo docker run -it --privileged --name dockertest2 -d docker:dind'
                sh 'sudo docker run --rm --link dockertest2:docker docker sh'



def network='jenkins-${BUILD_NUMBER}'
def seleniumHub='selenium-hub-${BUILD_NUMBER}'
def chrome='chrome-${BUILD_NUMBER}'
def firefox='firefox-${BUILD_NUMBER}'
def mvnHome = tool name: 'TestMaven', type: 'maven'
def mvnCMD = "${mvnHome}/bin/mvn"


maven
    image: 3.6.0-jdk-11-slim


RUN apt-get -y install openjdk-11-jre-headless
RUN apt-get -y install maven